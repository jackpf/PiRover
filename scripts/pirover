#!/bin/bash

#################################################
# Script to start and stop the PiRover controller
#################################################

# Redirect output to logs
logging=false

# Ports to listen to
# Note that if you change the broadcast port,
# you will need to change the broadcast port in the app settings also
broadcast_port=1337
controller_port=1338
camera_port=1339

#################################################

# Update wpa_supplicant.conf with any new wifi networks
function wpa_config_update {
    new_conf=/boot/wpa.conf
    conf=/etc/wpa_supplicant/wpa_supplicant.conf

    if [ -f "$new_conf" ]; then
        echo "Updating wpa_supplicant.conf with new info from wpa.conf..."
        while read line
        do
            echo "$line"
            echo "$line" >> "$conf"
        done <"$new_conf"
        echo "Done."
        echo "Deleting $new_conf..."
        rm -f "$new_conf"
        echo "Restarting network interfaces..."
        /etc/init.d/networking restart
        echo "Done."

    else
        echo "No new wpa_supplicant.conf info."
    fi
}

#################################################

# Start/Stop processes
bin_dir="/usr/local/bin"
log_dir="/var/log"

declare -A processes=(
    ["controller"]="--port=$controller_port"
    ["camera"]="--port=$camera_port"
    ["broadcast"]="--port=$broadcast_port --ctrlport=$controller_port --camport=$camera_port"
    ["lights"]=""
)

function start {
    log_redir=$([ "$logging" == true ] && echo "&>$log_dir/$(date +"%d_%m_%y-%T").txt" || echo "")

    for process in "${!processes[@]}"
    do
        eval "$bin_dir/$process $log_redir ${processes[$process]} &"
    done
}

function stop {
    for process in "${!processes[@]}"
    do
        pid=$(pidof "$process")
        if [ "$pid" -eq "$pid" ] 2>/dev/null # If is an actual PID
        then
            echo "Stopping $process"
            kill -9 "$pid"
        else
            echo "$process is not running"
        fi
    done
}

if [ "$1" = "start" ]; then
    # Check for updates on start
    wpa_config_update

    start
elif [ "$1" = "stop" ]; then
    stop
elif [ "$1" = "restart" ]; then
    stop
    start
else
    echo "Invalid command"
fi